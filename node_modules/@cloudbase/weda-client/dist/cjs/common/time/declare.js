"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    DateText: {
        id: 'DateText',
        type: 'method',
        name: '日期时间格式化',
        funName: 'DateText',
        gram: 'DateText(日期时间, 文本)',
        editorGram: 'DateText(${1:1661334203345}, ${2:"YYYY-MM-DD HH:mm:ss"})',
        desc: '格式化日期时间为指定格式的文本，例如 DateText(Date(2017,3,24), "yyyy-MM-dd HH:mm:ss")',
        cases: '指定创建日期格式为 yyyy-MM-dd HH:mm:ss。',
        example: 'DateText(#createdTime, "yyyy-MM-dd HH:mm:ss")',
        schemaRetType: { type: 'string' },
        retType: 'string',
        Zindex: 0,
    },
    DateTimeValue: {
        id: 'DateTimeValue',
        type: 'method',
        name: '使用时间日期文本创建日期时间',
        funName: 'DateTimeValue',
        gram: 'DateTimeValue(文本, 文本)',
        editorGram: 'DateTimeValue(${1:"2011-07-02"}, ${2:"YYYY:MM:DD"})',
        desc: '将日期时间文本根据指定格式转化为日期时间，例如 DateTimeValue("2021-12-11 01:19:12", "yyyy-MM-dd HH:mm:ss")',
        cases: '将字符串"2021-12-1 1:9:12"转换为日期时间类型。',
        example: 'DateTimeValue("2021-12-1 1:9:12", "yyyy-MM-dd HH:mm:ss")',
        schemaRetType: { type: 'number', format: 'datetime' },
        retType: 'number',
        Zindex: 1,
    },
    Now: {
        id: 'Now',
        type: 'method',
        name: '获取现在时间',
        funName: 'Now',
        gram: 'Now()',
        editorGram: 'Now()',
        desc: '返回当前系统时间，通常与其他日期时间函数搭配使用',
        cases: '获取当前时间。',
        example: 'Now()',
        schemaRetType: { type: 'number', format: 'datetime' },
        retType: 'number',
        Zindex: 2,
    },
    GetDate: {
        id: 'GetDate',
        type: 'method',
        name: '使用年月日创建日期时间',
        funName: 'GetDate',
        gram: 'GetDate(数字,数字,数字)',
        editorGram: 'GetDate(${1:2011}, ${2:7}, ${3:2})',
        desc: '根据输入的年月日数值返回一个日期类型的数据，例如 GetDate(2017,3,24)',
        cases: '创建 2021-5-17 号的日期类型。',
        example: 'GetDate(2021, 5, 17)',
        schemaRetType: { type: 'number', format: 'datetime' },
        retType: 'number',
        Zindex: 3,
    },
    Timestamp: {
        id: 'Timestamp',
        type: 'method',
        name: '获取时间戳',
        funName: 'Timestamp',
        gram: 'Timestamp(日期时间)',
        editorGram: 'Timestamp(${1:1661334203345})',
        desc: '根据输入的日期时间返回时间戳',
        cases: '获取当前时间的时间戳。',
        example: 'Timestamp(Now())',
        schemaRetType: { type: 'number', format: 'datetime' },
        retType: 'number',
        Zindex: 4,
    },
    Second: {
        id: 'Second',
        type: 'method',
        name: '获取秒数',
        funName: 'Second',
        gram: 'Second(日期时间)',
        editorGram: 'Second(${1:1661334203345})',
        desc: '根据输入的日期时间返回该时间的秒数',
        cases: '返回当前时间的秒数。',
        example: 'Second(Now())',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 5,
    },
    Minute: {
        id: 'Minute',
        type: 'method',
        name: '获取分钟数',
        funName: 'Minute',
        gram: 'Minute(日期时间)',
        editorGram: 'Minute(${1:1661334203345})',
        desc: '根据输入的日期时间返回该时间的分钟部分',
        cases: '返回当前时间的分钟数。',
        example: 'Minute(Now())',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 6,
    },
    Hour: {
        id: 'Hour',
        type: 'method',
        name: '获取小时数',
        funName: 'Hour',
        gram: 'Hour(日期时间)',
        editorGram: 'Hour(${1:1661334203345})',
        desc: '根据输入的日期时间返回该时间的小时部分，24小时制',
        cases: '返回当前时间的小时数。',
        example: 'Hour(Now())',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 7,
    },
    Day: {
        id: 'Day',
        type: 'method',
        name: '获取天数',
        funName: 'Day',
        gram: 'Day(日期时间)',
        editorGram: 'Day(${1:1661334203345})',
        desc: '根据输入的日期时间返回该时间的日部分，范围为 1-31',
        cases: '获取当天的日。',
        example: 'Day(Now())',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 8,
    },
    DayOfWeek: {
        id: 'DayOfWeek',
        type: 'method',
        name: '获取星期数',
        funName: 'DayOfWeek',
        gram: 'DayOfWeek(日期时间)',
        editorGram: 'DayOfWeek(${1:1661334203345})',
        desc: '根据输入的日期时间返回该时间的星期数',
        cases: '返回当前时间的星期数。',
        example: 'DayOfWeek(Now())',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 9,
    },
    Month: {
        id: 'Month',
        type: 'method',
        name: '获取月数',
        funName: 'Month',
        gram: 'Month(日期时间)',
        editorGram: 'Month(${1:1661334203345})',
        desc: '根据输入的日期时间返回该时间的月份',
        cases: '获取当天的月份。',
        example: 'Month(Now())',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 10,
    },
    Year: {
        id: 'Year',
        type: 'method',
        name: '获取年份',
        funName: 'Year',
        gram: 'Year(日期时间)',
        editorGram: 'Year(${1:1661334203345})',
        desc: '根据输入的日期时间返回该时间的年份',
        cases: '获取当前的年份。',
        example: 'Year(Now())',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 11,
    },
    // DateTime: {
    //   id: 'DateTime',
    //   type: 'method',
    //   name: '使用时间戳创建日期时间',
    //   funName: 'DateTime',
    //   gram: 'DateTime(数字)',
    //   editorGram: 'DateTime(${1:1661334203345})',
    //   desc: '将数字类型时间戳转化为日期时间，时间戳支持 10 位和 13 位，例如 DateTime(1625481537437)',
    //   cases: '计算时间戳 12345 所在日期，返回值为 1970-01-01 08:00:12',
    //   example: 'DateTime(12345)',
    //   retType: 'Date',
    //   Zindex: 11,
    // },
    Age: {
        id: 'Age',
        type: 'method',
        name: '计算年龄',
        funName: 'Age',
        gram: 'Age(日期时间,日期时间)',
        editorGram: 'Age(${1:1661334203345}, ${2:1661334203345})',
        desc: '根据输入的两个日期时间计算出年龄，例如 Age(Date(2017,3,24), Date(2021,3,24))',
        cases: '计算用户在 2021-3-24 日的年龄，用户出生日期为 1980-3-24，返回值为 31。',
        example: 'Age(Date(1980,3,24), Date(2021,3,24))',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 12,
    },
    AgeOfNow: {
        id: 'AgeOfNow',
        type: 'method',
        name: '计算当前年龄',
        funName: 'AgeOfNow',
        gram: 'AgeOfNow(日期时间)',
        editorGram: 'AgeOfNow(${1:1661334203345})',
        desc: '计算当前年龄，例如 AgeOfNow(Date(2017,3,24))',
        cases: '计算用户当前的年龄，用户出生日期为 1980-3-24。',
        example: 'AgeOfNow(Date(1980,3,24))',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 13,
    },
    DateAdd: {
        id: 'DateAdd',
        type: 'method',
        name: '增加 X 天',
        funName: 'DateAdd',
        gram: 'DateAdd(日期时间, 数字)',
        editorGram: 'DateAdd(${1:1661334203345}, ${2:1})',
        desc: '在传入的日期时间上增加 X 天，支持负数',
        cases: '开始时间（startDay）减少一天。',
        example: 'DateAdd(#startDay,-1)',
        schemaRetType: { type: 'number', format: 'datetime' },
        retType: 'number',
        Zindex: 14,
    },
    MonthAdd: {
        id: 'MonthAdd',
        type: 'method',
        name: '增加 X 月',
        funName: 'MonthAdd',
        gram: 'MonthAdd(日期时间, 数字)',
        editorGram: 'MonthAdd(${1:1661334203345}, ${2:1})',
        desc: '在传入的日期和时间上增加 X 月，支持负数',
        cases: '在开始时间（startDay）基础上减少一个月。',
        example: 'MonthAdd(#startDay,-1)',
        schemaRetType: { type: 'number', format: 'datetime' },
        retType: 'number',
        Zindex: 15,
    },
    YearAdd: {
        id: 'YearAdd',
        type: 'method',
        name: '增加 X 年',
        funName: 'YearAdd',
        gram: 'YearAdd(日期时间, 数字)',
        editorGram: 'YearAdd(${1:1661334203345}, ${2:1})',
        desc: '在传入的日期和时间上增加 X 年，支持负数',
        cases: '在开始时间（startDay）基础上减少一年。',
        example: 'YearAdd(#startDay,-1)',
        schemaRetType: { type: 'number', format: 'datetime' },
        retType: 'number',
        Zindex: 16,
    },
    DateDiff: {
        id: 'DateDiff',
        type: 'method',
        name: '天数差',
        funName: 'DateDiff',
        gram: 'DateDiff(日期时间, 日期时间)',
        editorGram: 'DateDiff(${1:1661334203345}, ${2:1661334203345})',
        desc: '返回两个日期时间字段之间的天数差，如果为同一天，差数为零',
        cases: '计算开始时间（startDay），结束时间（endDay）相差的天数。',
        example: 'DateDiff(#startDay, #endDay)',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 17,
    },
    HourDiff: {
        id: 'HourDiff',
        type: 'method',
        name: '小时差',
        funName: 'HourDiff',
        gram: 'HourDiff(日期时间, 日期时间)',
        editorGram: 'HourDiff(${1:1661334203345}, ${2:1661334203345})',
        desc: '返回两个日期时间字段之间的小时差，如果为同一小时，差数为零',
        cases: '计算开始时间（startDay），结束时间（endDay）相差的小时数。',
        example: 'HourDiff(#startDay, #endDay)',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 18,
    },
    MinuteDiff: {
        id: 'MinuteDiff',
        type: 'method',
        name: '分钟差',
        funName: 'MinuteDiff',
        gram: 'MinuteDiff(日期时间, 日期时间)',
        editorGram: 'MinuteDiff(${1:1661334203345}, ${2:1661334203345})',
        desc: '返回两个日期时间字段之间的分钟差，如果为同一分钟，差数为零',
        cases: '计算开始时间（startDay），结束时间（endDay）相差的分钟数。',
        example: 'MinuteDiff(#startDay, #endDay)',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 19,
    },
    SecondDiff: {
        id: 'SecondDiff',
        type: 'method',
        name: '秒数差',
        funName: 'SecondDiff',
        gram: 'SecondDiff(日期时间, 日期时间)',
        editorGram: 'SecondDiff(${1:1661334203345}, ${2:1661334203345})',
        desc: '返回两个日期时间字段之间的天数差，如果为同一天，差数为零',
        cases: '计算开始时间（startDay），结束时间（endDay）相差的秒数。',
        example: 'SecondDiff(#startDay, #endDay)',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 20,
    },
    MonthDiff: {
        id: 'MonthDiff',
        type: 'method',
        name: '月数差',
        funName: 'MonthDiff',
        gram: 'MonthDiff(日期时间, 日期时间)',
        editorGram: 'MonthDiff(${1:1661334203345}, ${2:1661334203345})',
        desc: '返回两个日期时间字段之间的月数差，如果为同一月，差数为零',
        cases: '计算开始时间（startDay），结束时间（endDay）相差的月数。',
        example: 'MonthDiff(#startDay, #endDay)',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 21,
    },
    YearDiff: {
        id: 'YearDiff',
        type: 'method',
        name: '年数差',
        funName: 'YearDiff',
        gram: 'YearDiff(日期时间, 日期时间)',
        editorGram: 'YearDiff(${1:1661334203345}, ${2:1661334203345})',
        desc: '返回两个日期时间字段之间的年数差，如果为同一年，差数为零',
        cases: '计算开始时间（startDay），结束时间（endDay）相差的年数。',
        example: 'YearDiff(#startDay, #endDay)',
        schemaRetType: { type: 'number' },
        retType: 'number',
        Zindex: 22,
    },
    IsToday: {
        id: 'IsToday',
        type: 'method',
        name: '是否为今天',
        funName: 'IsToday',
        gram: 'IsToday(日期时间)',
        editorGram: 'IsToday(${1:1661334203345})',
        desc: '判断传入的日期时间是否为今天，例如 IsToday(Date(2022,4,8))',
        cases: '判断今天日期是否为 2020-1-1。',
        example: 'IsToday(Date(2020,1,1))',
        schemaRetType: { type: 'boolean' },
        retType: 'boolean',
        Zindex: 23,
    },
    TimeText: {
        id: 'TimeText',
        type: 'method',
        name: '时间格式化',
        funName: 'TimeText',
        gram: 'TimeText(时间, 文本)',
        editorGram: 'TimeText(${1:28800000}, ${2:"HH:mm"})',
        desc: '格式化时间为指定格式的文本，输入时间为(小时 * 60 * 60 + 分钟 * 60) * 1000计算而来，例如 TimeText(28800000, "HH:mm")',
        cases: '指定创建时间格式为 HH:mm。',
        example: 'TimeText(28800000, "HH:mm")',
        schemaRetType: { type: 'string' },
        retType: 'string',
        Zindex: 24,
    },
};
