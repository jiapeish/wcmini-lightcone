import { ABS, Min, Max, Average, Floor, Ceiling, Round, Sum, Rand } from '../../../src/common/calculation/index';
import '../../setup';
// 计算传入数字的绝对值
test('test ABS function', async () => {
  expect(ABS(11)).toEqual(11);
  expect(ABS(-11)).toEqual(11);
  expect(ABS(-11123123123123123213)).toEqual(11123123123123123213);
});
// 返回一组数字中的最小值
test('test Min function', async () => {
  expect(Min(11, -1, 2, 55)).toEqual(-1);
  expect(Min(11, 2, 1, 44)).toEqual(1);
});
// 返回一组数字中的最大值
test('test Max function', async () => {
  expect(Max(11, -1, 2, 55)).toEqual(55);
  expect(Max(11, 2, 1, 44)).toEqual(44);
});
// 返回一组数字中的平均值
test('test Average function', async () => {
  expect(Average(11, -1, 2, 55)).toEqual(16.75);
  expect(Average(11, 2, 1, 44)).toEqual(14.5);
});
// 返回传入数字向下取整的结果
test('test Floor function', async () => {
  expect(Floor(11.12312312)).toEqual(11);
  expect(Floor(5.213123133123213123)).toEqual(5);
});
// 返回传入数字向上取整的结果
test('test Ceiling function', async () => {
  expect(Ceiling(11.12312312)).toEqual(12);
  expect(Ceiling(5.213123133123213123)).toEqual(6);
});
// 返回传入数字四舍五入后的结果
test('test Round function', async () => {
  expect(Round(11.52312312)).toEqual(12);
  expect(Round(5.213123133123213123)).toEqual(5);
});
// 返回一组数字中的和
test('test Sum function', async () => {
  expect(Sum(11, -1, 2, 55)).toEqual(67);
  expect(Sum(5.11, 2, 1, 44)).toEqual(52.11);
});
// 返回一个指定范围的伪随机数，例如 Rand(10)，返回一个范围在 10 以内的随机数
test('test Rand function', async () => {
  expect(Rand(100)).isNumber();
});
