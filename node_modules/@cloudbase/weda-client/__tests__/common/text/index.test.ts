import { Len, Contains, Split, Trim, Upper, Lower, Concat } from '../../../src/common/text/index';
// 获取传入文本的字符数
test('test Len function', async () => {
  expect(Len('11')).toEqual(2);
  expect(Len('null')).toEqual(4);
  expect(Len('')).toEqual(0);
});
// 是否包含指定文本
test('test Contains function', async () => {
  expect(Contains('', '')).toEqual(true);
  expect(Contains('1', '')).toEqual(true);
  expect(Contains('1123123123', '12')).toEqual(true);
});
// 拆分文本
test('test Split function', async () => {
  expect(Split('11231', '')).toEqual(['1', '1', '2', '3', '1']);
  expect(Split('1,12,31', ',')).toEqual(['1', '12', '31']);
  expect(Split('1,12,31,', ',')).toEqual(['1', '12', '31', '']);
});
// 删除开头/结尾空格和制表符
test('test Trim function', async () => {
  expect(Trim(' 11231 ')).toEqual('11231');
  expect(Trim('11  231')).toEqual('11  231');
});
// 转换为大写
test('test Upper function', async () => {
  expect(Upper(' 11231 ')).toEqual(' 11231 ');
  expect(Upper('undefined')).toEqual('UNDEFINED');
  expect(Upper('uNdeFinEd')).toEqual('UNDEFINED');
});
// 转换为小写
test('test Lower function', async () => {
  expect(Lower(' 11231 ')).toEqual(' 11231 ');
  expect(Lower('UNDEFINED')).toEqual('undefined');
  expect(Lower('uNdeFinEd')).toEqual('undefined');
});
// 转换为文本
// test('test Text function', async () => {
//   expect(Text(undefined)).toEqual('');
//   expect(Text(null)).toEqual('');
//   expect(Text(-11)).toEqual('-11');
//   expect(Text(-0)).toEqual('-0');
//   expect(Text(new Date('帅哥'))).toEqual('Invalid Date');
// });
// 文本拼接
test('test Concat function', async () => {
  expect(Concat('1', '123', '喜欢', '0', '1')).toEqual('1123喜欢01');
});
