/**
 * 新的cloud-sdk, app.cloud 挂载的为本模块返回的 CLOUD_SDK 对象
 */
import { setDefaultParams, getDataSourceViewId } from '../common';
import { setCloudConfig, VERSION } from './config';
import { callDataSource, callFunction, createDsApiProxy, getCloudInstance, callGraphql } from './basic-api';
import { callWorkflow, callWedaApi, checkAuth, callCommonService, getDataSourceProfile, getDataSourceProfileAsync, } from './business-api';
import { utils } from './utils-api';
import { getTempFileURL } from './temp-url-api';
export { normalizeMessage } from './error-normalize';
export * from './basic-api';
export { callCommonService } from './business-api';
export const DS_SDK = createDsApiProxy(false, (name) => {
    if (name !== '$call')
        return;
    return (params) => callDataSource(Object.assign({}, params, {
        parseBusinessInfo: false,
    }));
});
/**
 * CLOUD_SDK, 返回的对象应当附加至 app.cloud 对象上
 *
 * CLOUD_SDK 会处理数据源方法返回的业务结果, resolve 的为业务的 data, 业务返回异常则reject
 * 使用 getter 包裹 dataSources, callDataSource 来控制设置 parseBusinessInfo
 *  以控制数据源方法处理响应的方式,
 */
export const CLOUD_API = {
    dataSources: createDsApiProxy(true),
    /** 调用数据源 */
    callDataSource,
    /** 调用连接器 */
    callConnector: callDataSource,
    /** 调用模型 */
    callModel: callDataSource,
    /** 是否在 IDE 编辑器中*/
    IS_WEDA_IDE: false,
    version: VERSION,
    utils,
    getCloudInstance,
    callGraphql,
    callFunction,
    callWorkflow,
    callWedaApi,
    callCommonService,
    getTempFileURL,
    getDataSourceViewId,
    getDataSourceProfile,
    getDataSourceProfileAsync,
    setConfig: setCloudConfig,
    checkAuth,
    /** 设置数据源的默认请求参数 */
    setDataSourceDefaultParams: setDefaultParams,
};
