import { IUserInfo } from '../types';
export interface ISignInParams {
    phone?: string;
    userType: string;
}
/** 注册用户 */
declare function signIn(params?: ISignInParams): Promise<IUserInfo>;
/** 退出登录 */
declare function signOut(): Promise<void>;
/** 获取用户信息, 若用户未注册, 则返回 null */
declare function getUserInfo(force?: boolean): Promise<any>;
/** 匿名登录 */
declare function anonymousLogin(): Promise<void>;
/**
 * 修改用户信息
 * @param param0.userName 用户名
 * @param param0.nickName 昵称
 * @param param0.avatarUrl 头像
 * @param param0.description 描述
 * @returns
 */
declare function modifyCurrentUser({ nickName, userName, avatarUrl, description }?: {
    nickName?: string | undefined;
    userName?: string | undefined;
    avatarUrl?: string | undefined;
    description?: string | undefined;
}): Promise<any>;
declare const _default: {
    signIn: typeof signIn;
    getUserInfo: typeof getUserInfo;
    signOut: typeof signOut;
    anonymousLogin: typeof anonymousLogin;
    readonly currentUser: IUserInfo | null;
    setCurrentUserInfo(data?: Record<string, any>): void;
    getUrlWithOpenidToken(src: string): Promise<string>;
    openIdLoginInWxApp(): Promise<boolean>;
    unionIdLoginInWxApp(): Promise<boolean>;
    modifyCurrentUser: typeof modifyCurrentUser;
};
export default _default;
