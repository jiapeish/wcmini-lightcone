"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isMatch = exports.commonLocalStorage = exports.wxMpStorage = void 0;
exports.wxMpStorage = {
    setItem(key, value) {
        wx.setStorageSync(key, value);
    },
    getItem(key) {
        return wx.getStorageSync(key);
    },
    removeItem(key) {
        wx.removeStorageSync(key);
    },
    clear() {
        wx.clearStorageSync();
    },
    getKeys() {
        // @ts-ignore
        const { keys } = wx.getStorageInfoSync();
        return keys || [];
    },
};
class CommonStorge {
    constructor(config) {
        this.localStorage = (config === null || config === void 0 ? void 0 : config.localStorage) || globalThis.localStorage;
    }
    /**
     * Get Item
     * @param {string} key
     * @return {Promise<string | null>}
     */
    async getItem(key) {
        return this.localStorage.getItem(key);
    }
    /**
     * Remove Item.
     * @param {string} key
     * @return {Promise<void>}
     */
    async removeItem(key) {
        this.localStorage.removeItem(key);
    }
    /**
     * Set Item.
     * @param {string} key
     * @param {string} value
     * @return {Promise<void>}
     */
    async setItem(key, value) {
        this.localStorage.setItem(key, value);
    }
    getItemSync(key) {
        return this.localStorage.getItem(key);
    }
    setItemSync(key, value) {
        this.localStorage.setItem(key, value);
    }
    removeItemSync(key) {
        this.localStorage.removeItem(key);
    }
    /**
     * 获取缓存内所有 key
     */
    getKeysSync() {
        if (this.localStorage === globalThis.localStorage) {
            return Object.keys(this.localStorage);
        }
        return this.localStorage.getKeys();
    }
}
exports.commonLocalStorage = new CommonStorge({
    localStorage: isMatch() ? exports.wxMpStorage : undefined,
});
/**
 * 判断是否为小程序runtime
 */
function isMatch() {
    if (typeof wx === 'undefined') {
        return false;
    }
    if (typeof Page === 'undefined') {
        return false;
    }
    if (!wx.getSystemInfoSync) {
        return false;
    }
    if (!wx.getStorageSync) {
        return false;
    }
    if (!wx.setStorageSync) {
        return false;
    }
    if (!wx.connectSocket) {
        return false;
    }
    if (!wx.request) {
        return false;
    }
    try {
        if (!wx.getSystemInfoSync()) {
            return false;
        }
        if (wx.getSystemInfoSync().AppPlatform === 'qq') {
            return false;
        }
    }
    catch (e) {
        return false;
    }
    return true;
}
exports.isMatch = isMatch;
