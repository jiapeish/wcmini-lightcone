"use strict";
/**
 * 额外的API, 提供了 更新状态变量 和 更新 参数变量的方法
 *  ** 理论上应封装在低码框架中 **
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EXTRA_API = exports.setParams = exports.setState = void 0;
const common_1 = require("./common");
const eventBus_1 = require("./eventBus");
/**
 * @deprecated
 * 根据变量路径来设置状态变量的值
 * app._setStateVal 即基于本方法实现
 * @param varPath 变量路径, 使用 <页面ID>.<变量名> 格式:
 *      $global.list 全局变量
 *      $page.user 当前页面的变量
 *      detailPage.detail detail页面的变量
 * @param val 变量值, 如果 val 为错误对象则
 */
function setState(varPath, val) {
    const paths = varPath.split('.');
    if (paths.length !== 2) {
        console.warn('[weda-cloud-sdk]setStateVar: invalid varPath', varPath);
        return;
    }
    let pageID = paths[0];
    if (pageID === '$page') {
        const currentPage = (0, common_1.getConfig)('currentPageId');
        if (!currentPage || currentPage === '$global') {
            console.warn('[weda-cloud-sdk]setStateVar: can not find currentPageId', pageID);
            return;
        }
        pageID = currentPage;
    }
    const dataset = common_1.DATASET_CONTEXT[pageID];
    const varName = paths[1];
    // data var not exists
    if (!dataset || (!(0, common_1.hasOwn)(dataset.state.$status, varName) && !(0, common_1.hasOwn)(dataset.state, varName)))
        return;
    // datasource var
    if (dataset.state.$status[varName]) {
        // failed
        if (val instanceof Error) {
            dataset.state.$status[varName] = {
                status: 'failed',
                // @ts-ignore
                code: val.code || -1,
                message: val.message,
                error: val,
            };
            return;
        }
        if (dataset.state.$status[varName].status !== 'success') {
            dataset.state.$status[varName] = { status: 'success' };
        }
    }
    dataset.state[varName] = val;
}
exports.setState = setState;
/**
 * 根据变量路径来设置参数变量的值
 * @param pageID 页面名称
 * @param val 页面参数值, 应当为非空对象
 */
function setParams(pageID, val) {
    const datasetProfiles = (0, common_1.getConfig)('datasetProfiles') || {};
    const datasetConfig = datasetProfiles[pageID];
    const dataset = common_1.DATASET_CONTEXT[pageID];
    if (!dataset || !datasetConfig || !datasetConfig.params)
        return;
    const picked = (0, common_1.pick)(val, Object.keys(datasetConfig.params));
    if (!dataset.params) {
        dataset.params = {};
    }
    Object.entries(picked).forEach(([key, value]) => {
        dataset.params[key] = value;
    });
}
exports.setParams = setParams;
/**
 * cloud sdk 提供的额外的API, 应当附加至 app 对象上
 */
exports.EXTRA_API = {
    setState,
    setParams,
    EVENT_BUS: eventBus_1.EVENT_BUS,
};
