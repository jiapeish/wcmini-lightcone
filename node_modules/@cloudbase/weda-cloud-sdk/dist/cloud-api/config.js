"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VERSION = exports.getUserAgent = exports.getReferrer = exports.getGlobalObj = exports.setCloudConfig = exports.cloudConfig = void 0;
const common_1 = require("../common");
exports.cloudConfig = {
    tempURLMaxWaitGap: 50,
};
/**
 * 设置 weda-cloud-sdk
 * @param cfg 配置信息
 */
function setCloudConfig(cfg) {
    Object.assign(exports.cloudConfig, cfg);
}
exports.setCloudConfig = setCloudConfig;
/**
 * 根据 URL 设置 wedaTarget, 无需修改应用代码即可生效
 *    浏览器地址栏中若有查询字符串 __wedaTarget 则该字段的值则会被用于指定 wedaTarget
 */
function setCommonConfig() {
    try {
        setCloudConfig({ userAgent: getUserAgent() });
        // 取浏览器地址栏中的query信息, 避免低码各处iframe嵌套问题, try catch 也避免跨域/小程序等报错问题
        if (typeof window !== 'undefined' && window && window.top) {
            // @ts-ignore
            const qs = window.__wconfig || top.location.search;
            const comConfig = {};
            if (/\b__wedaTarget=([^&]+)/.test(qs)) {
                const target = decodeURIComponent(RegExp.$1);
                if (target) {
                    comConfig.wedaTarget = target;
                }
            }
            // 地址栏指定有查询参数 __useLegacy=true 则使用旧数据源
            if (/\b__useLegacy=true\b/.test(qs)) {
                comConfig.useLegacyDatasource = true;
            }
            (0, common_1.setConfig)(comConfig);
        }
    }
    catch (error) { }
}
/**
 * 获取全局对象 window
 *  小程序中可用, 但小程序中对象信息残缺, 无法访问 navigator 对象, ua 信息也无意义
 */
function getGlobalObj() {
    // @ts-ignore
    return (typeof window !== 'undefined' && window) || (typeof globalThis !== 'undefined' && globalThis);
}
exports.getGlobalObj = getGlobalObj;
/** 获取referrer 信息, 担心小程序中报错, 故catch */
function getReferrer() {
    try {
        const globalObj = getGlobalObj();
        if (!globalObj)
            return;
        // 浏览器中
        // @ts-ignore
        if (typeof wx === 'undefined') {
            // @ts-ignore
            return getGlobalObj().location.href;
        }
        // 当前页面路由
        // @ts-ignore
        return globalObj.__wxRoute;
    }
    catch (_a) { }
}
exports.getReferrer = getReferrer;
/** 获取用户UA, 小程序中使用 getSystemInfo 替代 */
function getUserAgent() {
    const globalObj = getGlobalObj();
    // @ts-ignore
    if (globalObj === null || globalObj === void 0 ? void 0 : globalObj.navigator)
        return globalObj.navigator.userAgent;
    // 微信小程序
    // @ts-ignore
    if (typeof wx !== 'undefined' && wx.getSystemInfo) {
        let ua;
        // 同步接口
        // @ts-ignore
        wx.getSystemInfo({
            success(res) {
                if (!res)
                    return;
                ua = ['brand', 'model', 'version', 'system', 'platform', 'SDKVersion', 'language']
                    .map((k) => `${k}: ${res[k]}`)
                    .join(', ');
            },
        });
        return ua;
    }
}
exports.getUserAgent = getUserAgent;
setCommonConfig();
/** 云开发库的版本 */
// @ts-ignore
exports.VERSION = "1.0.93";
