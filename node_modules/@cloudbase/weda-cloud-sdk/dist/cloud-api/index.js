"use strict";
/**
 * 新的cloud-sdk, app.cloud 挂载的为本模块返回的 CLOUD_SDK 对象
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CLOUD_API = exports.DS_SDK = exports.callCommonService = exports.normalizeMessage = void 0;
const common_1 = require("../common");
const config_1 = require("./config");
const basic_api_1 = require("./basic-api");
const business_api_1 = require("./business-api");
const utils_api_1 = require("./utils-api");
const temp_url_api_1 = require("./temp-url-api");
var error_normalize_1 = require("./error-normalize");
Object.defineProperty(exports, "normalizeMessage", { enumerable: true, get: function () { return error_normalize_1.normalizeMessage; } });
__exportStar(require("./basic-api"), exports);
var business_api_2 = require("./business-api");
Object.defineProperty(exports, "callCommonService", { enumerable: true, get: function () { return business_api_2.callCommonService; } });
exports.DS_SDK = (0, basic_api_1.createDsApiProxy)(false, (name) => {
    if (name !== '$call')
        return;
    return (params) => (0, basic_api_1.callDataSource)(Object.assign({}, params, {
        parseBusinessInfo: false,
    }));
});
/**
 * CLOUD_SDK, 返回的对象应当附加至 app.cloud 对象上
 *
 * CLOUD_SDK 会处理数据源方法返回的业务结果, resolve 的为业务的 data, 业务返回异常则reject
 * 使用 getter 包裹 dataSources, callDataSource 来控制设置 parseBusinessInfo
 *  以控制数据源方法处理响应的方式,
 */
exports.CLOUD_API = {
    dataSources: (0, basic_api_1.createDsApiProxy)(true),
    /** 调用数据源 */
    callDataSource: basic_api_1.callDataSource,
    /** 调用连接器 */
    callConnector: basic_api_1.callDataSource,
    /** 调用模型 */
    callModel: basic_api_1.callDataSource,
    /** 是否在 IDE 编辑器中*/
    IS_WEDA_IDE: false,
    version: config_1.VERSION,
    utils: utils_api_1.utils,
    getCloudInstance: basic_api_1.getCloudInstance,
    callGraphql: basic_api_1.callGraphql,
    callFunction: basic_api_1.callFunction,
    callWorkflow: business_api_1.callWorkflow,
    callWedaApi: business_api_1.callWedaApi,
    callCommonService: business_api_1.callCommonService,
    getTempFileURL: temp_url_api_1.getTempFileURL,
    getDataSourceViewId: common_1.getDataSourceViewId,
    getDataSourceProfile: business_api_1.getDataSourceProfile,
    getDataSourceProfileAsync: business_api_1.getDataSourceProfileAsync,
    setConfig: config_1.setCloudConfig,
    checkAuth: business_api_1.checkAuth,
    /** 设置数据源的默认请求参数 */
    setDataSourceDefaultParams: common_1.setDefaultParams,
};
