export enum ApiUrls {
  AUTH_SIGN_IN_URL = '/auth/v1/signin',
  AUTH_SIGN_IN_ANONYMOUSLY_URL = '/auth/v1/signin/anonymously',
  AUTH_SIGN_IN_WITH_PROVIDER_URL = '/auth/v1/signin/with/provider',
  AUTH_SIGN_IN_WITH_WECHAT_URL = '/auth/v1/signin/wechat/noauth',

  AUTH_SIGN_UP_URL = '/auth/v1/signup',
  AUTH_TOKEN_URL = '/auth/v1/token',
  AUTH_REVOKE_URL = '/auth/v1/revoke',
  AUTH_SIGNOUT_URL = '/auth/v1/user/signout',
  PROVIDER_BIND_URL = '/auth/v1/user/provider/bind',
  PROVIDER_TOKEN_URL = '/auth/v1/provider/token',
  PROVIDER_URI_URL = '/auth/v1/provider/uri',
  USER_ME_URL = '/auth/v1/user/me',
  RESET_PASSWORD_URL = '/auth/v1/reset',
  USER_QUERY_URL = '/auth/v1/user/query',
  USER_PROFILE_URL = '/auth/v1/user/profile',
  USER_BASIC_EDIT_URL = '/auth/v1/user/basic/edit',
  USER_TRANS_BY_PROVIDER_URL = '/auth/v1/user/trans/by/provider',
  VERIFICATION_URL = '/auth/v1/verification',
  VERIFY_URL = '/auth/v1/verification/verify',
  CAPTCHA_DATA_URL = '/auth/v1/captcha/data',
  VERIFY_CAPTCHA_DATA_URL = '/auth/v1/captcha/data/verify',
  GET_CAPTCHA_URL = '/auth/v1/captcha/init',
  PROVIDER_LIST_URL = '/auth/v1/user/provider',
  PROVIDER_UNBIND_URL = '/auth/v1/user/provider',
  SUDO_URL = '/auth/v1/user/sudo',
  EDIT_CONTACT_URL = '/auth/v1/user/contact',
  AUTH_SET_PASSWORD_URL = '/auth/v1/user/password',
  CHECK_IF_USER_EXIST_URL = '/auth/v1/checkIfUserExist',
  AUTHORIZE_URL = '/auth/v1/user/authorize',
  AUTHORIZE_DEVICE_URL = '/auth/v1/user/device/authorize',
  AUTHORIZE_DEVICE_CODE_URL = '/auth/v1/device/code',
  AUTHORIZE_INFO_URL = '/auth/v1/user/authorize/info',
  AUTHORIZED_URL = '/auth/v1/user/authorized',
  AUTHORIZED_DELETE_URL = '/auth/v1/user/authorized/',
  AUTHORIZED_DEVICES_URL = '/auth/v1/user/authorized/devices',
  AUTHORIZED_DEVICES_DELETE_URL = '/auth/v1/user/authorized/devices/',
  AUTH_REVOKE_ALL_URL = '/auth/v1/user/revoke/all',
  GET_PROVIDER_TYPE = '/auth/v1/mgr/provider/providerSubType',
  GET_MINIPROGRAM_QRCODE = '/auth/v1/qrcode/generate',
  GET_MINIPROGRAM_QRCODE_STATUS = '/auth/v1/qrcode/get/status',
}

export enum VerificationUsages {
  REGISTER = 'REGISTER',
  SIGN_IN = 'SIGN_IN',
  PASSWORD_RESET = 'PASSWORD_RESET',
  EMAIL_ADDRESS_CHANGE = 'EMAIL_ADDRESS_CHANGE',
  PHONE_NUMBER_CHANGE = 'PHONE_NUMBER_CHANGE',
}

export enum ErrorType {
  INVALID_ARGUMENT = 'invalid_argument',
  DEADLINE_EXCEEDED = 'deadline_exceeded',
  NOT_FOUND = 'not_found',
  ALREADY_EXISTS = 'already_exists',
  PERMISSION_DENIED = 'permission_denied',
  ABORTED = 'aborted',
  OUT_OF_RANGE = 'out_of_range',
  UNIMPLEMENTED = 'unimplemented',
  INTERNAL = 'internal',
  UNAVAILABLE = 'unavailable',
  DATA_LOSS = 'data_loss',
  // CommonError
  CAPTCHA_REQUIRED = 'captcha_required',
  CAPTCHA_INVALID = 'captcha_invalid',
  INVALID_PASSWORD = 'invalid_password',
  PASSWORD_NOT_SET = 'password_not_set',
  INVALID_STATUS = 'invalid_status',
  USER_PENDING = 'user_pending',
  USER_BLOCKED = 'user_blocked',
}

export enum DeviceAuthorizeState {
  // 完成
  ACCOMPLISHED = 'ACCOMPLISHED',
  // 等待连接
  WAITING_CONNECT = 'WAITING_CONNECT',
  // 等待用户点击同意界面
  WAITING_CONSENT = 'WAITING_CONSENT',
  // 用户拒绝授权
  ACCESS_DENIED = 'ACCESS_DENIED',
}
