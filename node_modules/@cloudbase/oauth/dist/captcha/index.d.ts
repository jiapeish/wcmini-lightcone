import { App, RequestOptions, RequestFn, Storage, OpenURIWithCallback } from '../app';
export interface CaptchaOptions {
    clientId?: string;
    request: RequestFn;
    storage: Storage;
    openURIWithCallback?: OpenURIWithCallback;
}
export interface CaptchaInitOptions {
    request?: RequestFn;
}
export declare function getCaptcha(app: App, opts?: CaptchaInitOptions): Captcha;
export interface CaptchaToken {
    captcha_token: string;
    expires_in: number;
    expires_at?: Date | null;
}
export interface CaptchaRequestOptions extends RequestOptions {
    withCaptcha?: boolean;
}
export interface GetCaptchaResponse {
    captcha_token?: string;
    expires_in?: number;
    url?: string;
}
export declare class Captcha {
    private config;
    private tokenSectionName;
    /**
     * constructor
     * @param {CaptchaOptions} opts
     */
    constructor(opts: CaptchaOptions);
    /**
     * request http like simple fetch api, exp:request('/v1/user/me', {withCredentials:true})
     * @param {string} url
     * @param {AuthClientRequestOptions} options
     */
    request<T>(url: string, options?: CaptchaRequestOptions): Promise<T>;
    /**
     * getCaptchaToken 获取captchaToken
     */
    private getCaptchaToken;
    private appendCaptchaTokenToURL;
    private saveCaptchaToken;
    private findCaptchaToken;
}
