"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PromiseOnce = void 0;
/**
 * Promise Once
 */
class PromiseOnce {
    constructor() {
        this._fnPromiseMap = new Map();
    }
    /**
     * Run Once promise.
     * @param {string} key
     * @param {Function} fn
     * @return {Promise<T>}
     */
    async run(key, fn) {
        let result = this._fnPromiseMap.get(key);
        if (!result) {
            result = new Promise(async (resolve, reject) => {
                try {
                    // The idle promise must be run to prevent _fnPromiseMap from
                    // storing the current promise function.
                    await this._runIdlePromise();
                    const fnResult = fn();
                    resolve(await fnResult);
                }
                catch (error) {
                    reject(error);
                }
                finally {
                    this._fnPromiseMap.delete(key);
                }
            });
            this._fnPromiseMap.set(key, result);
        }
        return result;
    }
    /**
     * Run idle promise.
     * @return {Promise<void>}
     */
    _runIdlePromise() {
        return Promise.resolve();
    }
}
exports.PromiseOnce = PromiseOnce;
