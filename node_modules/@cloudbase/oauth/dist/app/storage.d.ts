/** An interface of the Simple  Web Storage API  */
export interface Storage {
    /**
     * value = storage[key]
     */
    getItem(key: string): Promise<string | null>;
    /**
     * delete storage[key]
     */
    removeItem(key: string): Promise<void>;
    /**
     * storage[key] = value
     */
    setItem(key: string, value: string): Promise<void>;
}
export interface StorageOptions {
    env: string;
}
/**
 * Default Storage.
 */
export declare class DefaultStorage implements Storage {
    private readonly _env;
    constructor(opts: StorageOptions);
    /**
     * Get item.
     * @param {string} key
     */
    getItem(key: string): Promise<string | null>;
    /**
     * Remove item.
     * @param {string} key
     */
    removeItem(key: string): Promise<void>;
    /**
     * Set item.
     * @param {string} key
     * @param {string} value
     */
    setItem(key: string, value: string): Promise<void>;
}
