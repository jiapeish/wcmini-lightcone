"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultOpenURIWithCallback = void 0;
const consts_1 = require("../auth/consts");
/**
 * default use iframe to open url can return callback
 * for example : open https://example.com/callback?rediret_uri=http://127.0.0.1:8080/
 *     the it is done, it will callback http://127.0.0.1:8080/?data1=x&data2=3
 *
 * for example : open https://example.com/callback?rediret_uri=http://127.0.0.1:8080/?__iframe==on
 *      window.addEventListener('message', function(e) {
        console.log(e)
        alert('data from domain2 ---> ' + e.data);
    }, false);
 *
 */
const defaultOpenURIWithCallback = (url, opts) => {
    let iframeTag = '__iframe';
    const { width = '355px', height = '355px' } = opts || {};
    const matched = url.match(/^(data:.*)$/);
    if (matched) {
        return Promise.reject({
            error: consts_1.ErrorType.UNIMPLEMENTED,
            error_description: `need to impl captcha data`,
        });
    }
    if (window.location.search.indexOf(iframeTag) > 0) {
        document.body.style.display = 'none';
    }
    if (document.getElementById('_iframe_panel_wrap') === null) {
        var elementDiv = document.createElement('div');
        elementDiv.style.cssText =
            'background-color: rgba(0, 0, 0, 0.7);position: fixed;left: 0px;right: 0px;top: 0px;bottom: 0px;padding: 9vw 0 0 0;display: none;z-index:100;';
        elementDiv.setAttribute('id', '_iframe_panel_wrap');
        document.body.appendChild(elementDiv);
    }
    const target = document.getElementById('_iframe_panel_wrap'), iframe = document.createElement('iframe');
    target.innerHTML = '';
    const openURL = new URL(url);
    let search = openURL.search.substring(1);
    let contactSign = '?';
    if (openURL.hash.indexOf('=') > 0) {
        search = openURL.hash.substring(1);
        contactSign = '#';
    }
    const searchParams = new URLSearchParams(search);
    const redirectUri = searchParams.get('redirect_uri');
    if (redirectUri) {
        const redirectUrl = new URL(redirectUri);
        redirectUrl.searchParams.append(iframeTag, 'on');
        searchParams.set('redirect_uri', redirectUrl.href);
        url = openURL.origin + openURL.pathname + contactSign + searchParams.toString();
    }
    iframe.setAttribute('src', url);
    iframe.setAttribute('id', '_iframe_panel_wrap_iframe');
    iframe.style.cssText = `min-width:${width};display:block;height:${height};margin:0 auto;background-color: rgb(255, 255, 255);border: none;`;
    target.appendChild(iframe);
    target.style.display = 'block';
    let callBack = new Callback();
    // handle callback from iframe post message
    window.addEventListener('message', (e) => {
        if (e.origin == openURL.origin && callBack.callFunc) {
            if (!(typeof e.data === 'string')) {
                return;
            }
            target.style.display = 'none';
            const data = JSON.parse(e.data);
            try {
                callBack.callFunc(data);
            }
            catch (e) { }
        }
    }, false);
    return new Promise((resolve, reject) => {
        callBack.callFunc = (data) => {
            if (data.error) {
                return reject(data);
            }
            return resolve(data);
        };
        // handle callback from iframe redirect uri
        iframe.onload = () => {
            try {
                var windowLocation = window.location;
                var iframeLocation = iframe.contentWindow.location;
                if (iframeLocation.host + iframeLocation.pathname === windowLocation.host + windowLocation.pathname) {
                    target.style.display = 'none';
                    const iframeUrlParams = new URLSearchParams(iframeLocation.search);
                    const data = {};
                    iframeUrlParams.forEach((v, k) => {
                        data[k] = v;
                    });
                    if (data.error) {
                        return reject({
                            error: iframeUrlParams.get('error'),
                            error_description: iframeUrlParams.get('error_description'),
                        });
                    }
                    return resolve(data);
                }
                else {
                    target.style.display = 'block';
                }
            }
            catch (error) {
                target.style.display = 'block';
            }
        };
    });
};
exports.defaultOpenURIWithCallback = defaultOpenURIWithCallback;
class Callback {
}
