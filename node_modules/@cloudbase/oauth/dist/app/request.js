"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultRequest = exports.ErrorType = void 0;
var ErrorType;
(function (ErrorType) {
    ErrorType["UNREACHABLE"] = "unreachable";
})(ErrorType = exports.ErrorType || (exports.ErrorType = {}));
const defaultRequest = async (url, options) => {
    let result;
    let responseError;
    // Objects must be copied to prevent modification of data such as body.
    const copyOptions = Object.assign({}, options);
    if (!copyOptions.method) {
        copyOptions.method = 'GET';
    }
    if (copyOptions.body && typeof copyOptions.body !== 'string') {
        copyOptions.body = JSON.stringify(copyOptions.body, (key, value) => {
            if (value) {
                if (value instanceof Map) {
                    return Object.fromEntries(value.entries());
                }
                else if (value !== '') {
                    return value;
                }
            }
        });
    }
    const requestId = copyOptions.headers['x-request-id'];
    try {
        copyOptions.credentials = 'include';
        const responseResult = await fetch(url, copyOptions);
        const jsonResponse = await responseResult.json();
        if (jsonResponse.error || responseResult.status >= 400) {
            responseError = jsonResponse;
            responseError.error_uri = new URL(url).pathname;
            responseError.request_id = requestId;
        }
        else {
            result = jsonResponse;
        }
    }
    catch (error) {
        responseError = {
            error: ErrorType.UNREACHABLE,
            error_description: error.message,
            error_uri: new URL(url).pathname,
            request_id: requestId,
        };
    }
    if (responseError) {
        throw responseError;
    }
    else {
        return result;
    }
};
exports.defaultRequest = defaultRequest;
