"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppImpl = exports.initializeApp = void 0;
const request_1 = require("./request");
const openuri_1 = require("./openuri");
const storage_1 = require("./storage");
function initializeApp(options) {
    return new AppImpl(options);
}
exports.initializeApp = initializeApp;
class AppImpl {
    constructor(options) {
        this._container = new Map();
        if (!options.region) {
            options.region = 'ap-shanghai';
        }
        if (!options.apiOrigin) {
            options.apiOrigin = `https://${options.env}.${options.region}.tcb-api.tencentcloudapi.com`;
        }
        let storageEnv = options.env;
        if (!options.clientId) {
            options.clientId = '';
        }
        else {
            storageEnv = options.clientId;
        }
        if (!options.storage) {
            options.storage = new storage_1.DefaultStorage({ env: storageEnv });
        }
        if (!options.captchaOptions) {
            options.captchaOptions = {};
        }
        if (!options.captchaOptions.openURIWithCallback) {
            // 兼容之前的传参方式，options.openURIWithCallback
            options.captchaOptions.openURIWithCallback = options.openURIWithCallback || openuri_1.defaultOpenURIWithCallback;
        }
        let baseRequest = options.baseRequest || options.request || request_1.defaultRequest;
        if (!baseRequest) {
            baseRequest = request_1.defaultRequest;
        }
        const apiOrigin = options.apiOrigin;
        options.request = async (url, options) => {
            if (url.startsWith('/')) {
                url = apiOrigin + url;
            }
            return baseRequest(url, options);
        };
        this._options = options;
    }
    get options() {
        return this._options;
    }
    get container() {
        return this._container;
    }
}
exports.AppImpl = AppImpl;
