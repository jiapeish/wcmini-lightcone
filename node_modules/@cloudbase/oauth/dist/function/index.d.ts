import { App } from "../app";
import { AuthClient } from "../oauthclient";
export interface FunctionOptions {
    credentialsClient: AuthClient;
    env: string;
}
/**
 * Returns the existing `Auth` instance that is associated with the app
 */
export declare function getFunction(app: App): Function;
export declare class Function {
    private _config;
    /**
     * constructor
     * @param {AuthOptions} opts
     */
    constructor(opts: FunctionOptions);
    /**
     * callFunction call function
     * @param {SignInRequest} params A SignInRequest Object.
     * @return {Promise<Credentials>} A Promise<Credentials> object.
     */
    callFunction(params: FunctionRequest): Promise<FunctionResponse>;
}
export interface FunctionRequest {
    name: string;
    data: any;
}
export interface FunctionResponse {
    requestId: string;
    result: any;
}
export interface functionHTTPResponse {
    requestId: string;
    data: any;
    code: string;
    message: string;
}
