import { OAuth2Client } from './oauth2client/oauth2client'

import { AuthOptions, Auth } from './auth/apis'

import * as authModels from './auth/models'

export { Syntax, ErrorType } from './oauth2client/consts'

export {
  defaultStorage,
  defaultRequest,
  ToResponseErrorOptions,
  toResponseError,
  generateRequestId,
  OAuth2Client,
} from './oauth2client/oauth2client'

export { AuthClient, SimpleStorage } from './oauth2client/interface'

export {
  Credentials,
  ResponseError,
  OAuth2ClientOptions,
  AuthClientRequestOptions,
} from './oauth2client/models'

export { AuthOptions, Auth } from './auth/apis'
export { authModels }


export class CloudbaseOAuth {
  public oauth2client: OAuth2Client
  public authApi: Auth

  constructor(authOptions: AuthOptions) {
    const { apiOrigin, clientId, storage, request, anonymousSignInFunc } = authOptions
    this.oauth2client = new OAuth2Client({
      apiOrigin,
      clientId,
      storage,
      baseRequest: request,
      anonymousSignInFunc,
    })

    this.authApi = new Auth({
      credentialsClient: this.oauth2client,
      ...authOptions,
      // 兼容老逻辑，有值传入则不走Auth内的验证码请求逻辑
      request: request ? this.oauth2client.request.bind(this.oauth2client) : undefined,
    })
  }
}

