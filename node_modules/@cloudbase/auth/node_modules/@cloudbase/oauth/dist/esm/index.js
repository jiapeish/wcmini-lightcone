var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { OAuth2Client } from './oauth2client/oauth2client';
import { Auth } from './auth/apis';
import * as authModels from './auth/models';
export { Syntax, ErrorType } from './oauth2client/consts';
export { defaultStorage, defaultRequest, toResponseError, generateRequestId, OAuth2Client, } from './oauth2client/oauth2client';
export { AuthClient } from './oauth2client/interface';
export { Auth } from './auth/apis';
export { authModels };
var CloudbaseOAuth = (function () {
    function CloudbaseOAuth(authOptions) {
        var apiOrigin = authOptions.apiOrigin, clientId = authOptions.clientId, storage = authOptions.storage, request = authOptions.request, anonymousSignInFunc = authOptions.anonymousSignInFunc;
        this.oauth2client = new OAuth2Client({
            apiOrigin: apiOrigin,
            clientId: clientId,
            storage: storage,
            baseRequest: request,
            anonymousSignInFunc: anonymousSignInFunc,
        });
        this.authApi = new Auth(__assign(__assign({ credentialsClient: this.oauth2client }, authOptions), { request: request ? this.oauth2client.request.bind(this.oauth2client) : undefined }));
    }
    return CloudbaseOAuth;
}());
export { CloudbaseOAuth };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sNkJBQTZCLENBQUE7QUFFMUQsT0FBTyxFQUFlLElBQUksRUFBRSxNQUFNLGFBQWEsQ0FBQTtBQUUvQyxPQUFPLEtBQUssVUFBVSxNQUFNLGVBQWUsQ0FBQTtBQUUzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLHVCQUF1QixDQUFBO0FBRXpELE9BQU8sRUFDTCxjQUFjLEVBQ2QsY0FBYyxFQUVkLGVBQWUsRUFDZixpQkFBaUIsRUFDakIsWUFBWSxHQUNiLE1BQU0sNkJBQTZCLENBQUE7QUFFcEMsT0FBTyxFQUFFLFVBQVUsRUFBaUIsTUFBTSwwQkFBMEIsQ0FBQTtBQVNwRSxPQUFPLEVBQWUsSUFBSSxFQUFFLE1BQU0sYUFBYSxDQUFBO0FBQy9DLE9BQU8sRUFBRSxVQUFVLEVBQUUsQ0FBQTtBQUdyQjtJQUlFLHdCQUFZLFdBQXdCO1FBQzFCLElBQUEsU0FBUyxHQUFzRCxXQUFXLFVBQWpFLEVBQUUsUUFBUSxHQUE0QyxXQUFXLFNBQXZELEVBQUUsT0FBTyxHQUFtQyxXQUFXLFFBQTlDLEVBQUUsT0FBTyxHQUEwQixXQUFXLFFBQXJDLEVBQUUsbUJBQW1CLEdBQUssV0FBVyxvQkFBaEIsQ0FBZ0I7UUFDbEYsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLFlBQVksQ0FBQztZQUNuQyxTQUFTLFdBQUE7WUFDVCxRQUFRLFVBQUE7WUFDUixPQUFPLFNBQUE7WUFDUCxXQUFXLEVBQUUsT0FBTztZQUNwQixtQkFBbUIscUJBQUE7U0FDcEIsQ0FBQyxDQUFBO1FBRUYsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLElBQUkscUJBQ3JCLGlCQUFpQixFQUFFLElBQUksQ0FBQyxZQUFZLElBQ2pDLFdBQVcsS0FFZCxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLElBQ2hGLENBQUE7SUFDSixDQUFDO0lBQ0gscUJBQUM7QUFBRCxDQUFDLEFBckJELElBcUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT0F1dGgyQ2xpZW50IH0gZnJvbSAnLi9vYXV0aDJjbGllbnQvb2F1dGgyY2xpZW50J1xuXG5pbXBvcnQgeyBBdXRoT3B0aW9ucywgQXV0aCB9IGZyb20gJy4vYXV0aC9hcGlzJ1xuXG5pbXBvcnQgKiBhcyBhdXRoTW9kZWxzIGZyb20gJy4vYXV0aC9tb2RlbHMnXG5cbmV4cG9ydCB7IFN5bnRheCwgRXJyb3JUeXBlIH0gZnJvbSAnLi9vYXV0aDJjbGllbnQvY29uc3RzJ1xuXG5leHBvcnQge1xuICBkZWZhdWx0U3RvcmFnZSxcbiAgZGVmYXVsdFJlcXVlc3QsXG4gIFRvUmVzcG9uc2VFcnJvck9wdGlvbnMsXG4gIHRvUmVzcG9uc2VFcnJvcixcbiAgZ2VuZXJhdGVSZXF1ZXN0SWQsXG4gIE9BdXRoMkNsaWVudCxcbn0gZnJvbSAnLi9vYXV0aDJjbGllbnQvb2F1dGgyY2xpZW50J1xuXG5leHBvcnQgeyBBdXRoQ2xpZW50LCBTaW1wbGVTdG9yYWdlIH0gZnJvbSAnLi9vYXV0aDJjbGllbnQvaW50ZXJmYWNlJ1xuXG5leHBvcnQge1xuICBDcmVkZW50aWFscyxcbiAgUmVzcG9uc2VFcnJvcixcbiAgT0F1dGgyQ2xpZW50T3B0aW9ucyxcbiAgQXV0aENsaWVudFJlcXVlc3RPcHRpb25zLFxufSBmcm9tICcuL29hdXRoMmNsaWVudC9tb2RlbHMnXG5cbmV4cG9ydCB7IEF1dGhPcHRpb25zLCBBdXRoIH0gZnJvbSAnLi9hdXRoL2FwaXMnXG5leHBvcnQgeyBhdXRoTW9kZWxzIH1cblxuXG5leHBvcnQgY2xhc3MgQ2xvdWRiYXNlT0F1dGgge1xuICBwdWJsaWMgb2F1dGgyY2xpZW50OiBPQXV0aDJDbGllbnRcbiAgcHVibGljIGF1dGhBcGk6IEF1dGhcblxuICBjb25zdHJ1Y3RvcihhdXRoT3B0aW9uczogQXV0aE9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGFwaU9yaWdpbiwgY2xpZW50SWQsIHN0b3JhZ2UsIHJlcXVlc3QsIGFub255bW91c1NpZ25JbkZ1bmMgfSA9IGF1dGhPcHRpb25zXG4gICAgdGhpcy5vYXV0aDJjbGllbnQgPSBuZXcgT0F1dGgyQ2xpZW50KHtcbiAgICAgIGFwaU9yaWdpbixcbiAgICAgIGNsaWVudElkLFxuICAgICAgc3RvcmFnZSxcbiAgICAgIGJhc2VSZXF1ZXN0OiByZXF1ZXN0LFxuICAgICAgYW5vbnltb3VzU2lnbkluRnVuYyxcbiAgICB9KVxuXG4gICAgdGhpcy5hdXRoQXBpID0gbmV3IEF1dGgoe1xuICAgICAgY3JlZGVudGlhbHNDbGllbnQ6IHRoaXMub2F1dGgyY2xpZW50LFxuICAgICAgLi4uYXV0aE9wdGlvbnMsXG4gICAgICAvLyDlhbzlrrnogIHpgLvovpHvvIzmnInlgLzkvKDlhaXliJnkuI3otbBBdXRo5YaF55qE6aqM6K+B56CB6K+35rGC6YC76L6RXG4gICAgICByZXF1ZXN0OiByZXF1ZXN0ID8gdGhpcy5vYXV0aDJjbGllbnQucmVxdWVzdC5iaW5kKHRoaXMub2F1dGgyY2xpZW50KSA6IHVuZGVmaW5lZCxcbiAgICB9KVxuICB9XG59XG5cbiJdfQ==